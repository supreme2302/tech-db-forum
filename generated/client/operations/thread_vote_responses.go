// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/supreme2302/tech-db-forum/generated/models"
)

// ThreadVoteReader is a Reader for the ThreadVote structure.
type ThreadVoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ThreadVoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewThreadVoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewThreadVoteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewThreadVoteOK creates a ThreadVoteOK with default headers values
func NewThreadVoteOK() *ThreadVoteOK {
	return &ThreadVoteOK{}
}

/*ThreadVoteOK handles this case with default header values.

Информация о ветке обсуждения.

*/
type ThreadVoteOK struct {
	Payload *models.Thread
}

func (o *ThreadVoteOK) Error() string {
	return fmt.Sprintf("[POST /thread/{slug_or_id}/vote][%d] threadVoteOK  %+v", 200, o.Payload)
}

func (o *ThreadVoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Thread)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewThreadVoteNotFound creates a ThreadVoteNotFound with default headers values
func NewThreadVoteNotFound() *ThreadVoteNotFound {
	return &ThreadVoteNotFound{}
}

/*ThreadVoteNotFound handles this case with default header values.

Ветка обсуждения отсутсвует в форуме.

*/
type ThreadVoteNotFound struct {
	Payload *models.Error
}

func (o *ThreadVoteNotFound) Error() string {
	return fmt.Sprintf("[POST /thread/{slug_or_id}/vote][%d] threadVoteNotFound  %+v", 404, o.Payload)
}

func (o *ThreadVoteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
