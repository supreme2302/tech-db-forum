// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/supreme2302/tech-db-forum/generated/models"
)

// UserGetOneReader is a Reader for the UserGetOne structure.
type UserGetOneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserGetOneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserGetOneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUserGetOneNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserGetOneOK creates a UserGetOneOK with default headers values
func NewUserGetOneOK() *UserGetOneOK {
	return &UserGetOneOK{}
}

/*UserGetOneOK handles this case with default header values.

Информация о пользователе.

*/
type UserGetOneOK struct {
	Payload *models.User
}

func (o *UserGetOneOK) Error() string {
	return fmt.Sprintf("[GET /user/{nickname}/profile][%d] userGetOneOK  %+v", 200, o.Payload)
}

func (o *UserGetOneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGetOneNotFound creates a UserGetOneNotFound with default headers values
func NewUserGetOneNotFound() *UserGetOneNotFound {
	return &UserGetOneNotFound{}
}

/*UserGetOneNotFound handles this case with default header values.

Пользователь отсутсвует в системе.

*/
type UserGetOneNotFound struct {
	Payload *models.Error
}

func (o *UserGetOneNotFound) Error() string {
	return fmt.Sprintf("[GET /user/{nickname}/profile][%d] userGetOneNotFound  %+v", 404, o.Payload)
}

func (o *UserGetOneNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
